#include<iostream>
#include<string.h>
using namespace std;

class node{
	public :
	node *rcl , *lcl;
	int info;
	node * create(node *);
	void display(node * , int );
	int mirror(node * , node *);
	node * copy(node *);
};


node *  node::create(node *root){
	node *temp, *prev,*cur;
	char d[10];
	int i , item;
	temp = new node;
	cout<<"element";
	cin>>temp->info;
	temp->lcl = NULL;
	temp->rcl = NULL;
	if(root == NULL){
		root = temp;
		return  root;
	}
	cout<<"direction";
	cin>>d;
	prev = NULL;
	cur = root;
	for(i = 0; i<strlen(d) ; i++){
		if(cur == NULL)
			break;
		prev = cur;
		if(d[i] == 'L')
			cur = cur->lcl;
		else cur = cur->rcl;
	}
	if(cur!=NULL || i!=strlen(d)){
		cout<<"imposible";
		delete temp;
		return root ;
	}
	if(d[i-1] == 'L')
		prev->lcl = temp;
	else prev->rcl = temp;
	return root;
}
void node::display(node *rt , int level){
	int i;
	if(rt == NULL  )return;
	display(rt->rcl , level + 1);
	for(i = 0;i<level ;i++)
		cout<<"	";
	cout<<rt->info<<endl;
	display(rt->lcl , level+1);
}

node * node::copy(node *root){
	node * croot;
	if(root!=NULL){
		croot = new node;
		croot->info = root->info;
		croot->lcl = copy(root->lcl);
		croot->rcl = copy(root->rcl);
	}
	else return NULL;
	return croot;
}


int main(){
	
	node *n1 = NULL, n,*n2;
	int num,c , ele;
	cout<<"enter no of elements";
	cin>>num;
	for(int i =0;i<num;i++){

		n1 = n.create(n1);
	}
	n.display(n1,0);
	cout<<endl<<"copied list"<<endl;
	n2 = n.copy(n1);
	cout<<endl;
	n.display(n2,0);
	
}
